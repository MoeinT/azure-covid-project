name: 'Terraform'

on: [push, pull_request]

env:
  TF_LOG: INFO

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
        working-directory: ./tf
    steps:
    - name: Checkout
      uses: actions/checkout@v2 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.9
    - name: Terraform init..
      id: init
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      run: terraform init
    - name: Validating terraform..
      run: terraform validate
    - name: Checking the format..
      run: terraform fmt -check -recursive

    - name: Terraform Plan
      id: plan
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_MSSQL_LOGIN: ${{ secrets.ARM_MSSQL_LOGIN }}
        ARM_MSSQL_PASSWORD: ${{ secrets.ARM_MSSQL_PASSWORD }}
      if: github.event_name == 'pull_request'
      run: terraform plan -var 'mssql_login=${{ secrets.ARM_MSSQL_LOGIN }}' -var 'mssql_password=${{ secrets.ARM_MSSQL_PASSWORD }}'

    #Only gets deployed when pull request get closed and merged to main
    - name: Terraform apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env: 
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_MSSQL_LOGIN: ${{ secrets.ARM_MSSQL_LOGIN }}
        ARM_MSSQL_PASSWORD: ${{ secrets.ARM_MSSQL_PASSWORD }}
      run: terraform apply -auto-approve -var 'mssql_login=${{ secrets.ARM_MSSQL_LOGIN }}' -var 'mssql_password=${{ secrets.ARM_MSSQL_PASSWORD }}'